#labels Featured
== Introduction ==
This project provies a fully compliant BPEL4WS 1.1 and WS-BPEL 2.0 engine. 
The code here is based on the final release of ActiveBPEL 5.0.2. The goal of 
bpel-g is to provide a viable BPEL engine for the open source community, particularly
those in the public sector. The main focus is spec compliance.

== Building ==

=== Local Repo ===
bpel-g uses maven. A couple of the projects require artifacts which aren't available on public repositories. A local maven repository is included as part of the trunk and is referenced by a some of the projects. If you're using a local proxy to mirror remote maven repositories, make sure that you have the mirrorOf rule configured to allow local reops (i.e. {{{ <mirrorOf>external:*</mirrorOf>}}} )

=== Eclipse ===
The easiest way to get these projects into eclipse is to install the [http://m2eclipse.sonatype.org/ m2eclipse plugin]. Once installed, select File / Import / Existing Maven Projects. The m2eclipse plugin can be a little flakey when importing nested projects so I typically deselect the root project and then manually select each of the child projects. This way there won't be a duplicate copy of files in search results and your workspace will be smaller.

=== Mylyn ===
If you're a mylyn user, then you can connect to the issues list in google code by following the instructions [http://eclipse.dzone.com/articles/using-mylyn-with-google-code-u here]. I'm using the following config:

||server url|| {{{http://code.google.com/p/bpel-g/issues}}} ||
||query url|| {{{${serverUrl}/csv?can=2&colspec=ID%20Status%20Type%20Owner%20Summary&status=Accepted,Started&sort=priority}}} ||
|| query pattern || {{{ "({Id}[0-9]+?)","({Status}.+?)","({Type}.+?)","({Owner}.+?)","({Description}.+?)"\s}}} ||

== Database ==
The default configuration of bpel-g requires a database (a future release will have an in-memory only profile). The database of choice for this release is the [http://www.h2database.com/ H2 java database]. At the moment, the easiest way to create the required db instance is to run the build for the war packaging:

{{{
bpel-g/bpel-g.war> mvn clean install -Dcreate-db 
}}}

This will create a database in the user's home directory named bpelg-h2-db. You can configure the location and name of the db that gets created by modifying the filter.properties file in this project. 

=== Configuring WAR ===
The WAR project has a context that is already configured to reference the database created during the build. Be sure to put the H2 jar within the $CATALINA_HOME/lib directory.

=== Configuring ServiceMix ===
See the [ServiceMix] page

== BPEL Deployments in WAR ==
The Business Process Archive (or BPR) is the only supported packaging structure at the moment for the web application. Check the [http://activevos.com ActiveVOS] web site for information on how to construct a BPR or simply use their BPEL designer to create one. Support for a simpler packaging structure will be added in the future.

It is also possible to deploy a BPR via a web service call.

== BPEL Deployments in ServiceMix ==
See the [ServiceMix] page